name: PR Review with Dify
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Collect PR Data
        id: pr_data
        run: |
          echo "Collecting PR data..."
          
          # Get PR diff
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > pr_diff.txt
          echo "PR Diff collected."  # Debugging statement
          
          # Get files changed
          FILES_CHANGED=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | tr '\n' ', ')
          echo "Files changed: $FILES_CHANGED"  # Debugging statement
          
          # Create the query
          QUERY="Review PR: ${{ github.event.pull_request.title }}. Changes: $FILES_CHANGED"
          
          # Escape for JSON
          QUERY_ESCAPED=$(echo "$QUERY" | jq -Rs .)
          echo "query=$QUERY_ESCAPED" >> "$GITHUB_OUTPUT"

      - name: Send to Dify
        id: dify_request
        run: |
          echo "Sending request to Dify..."
          
          REQUEST_DATA="{\"inputs\": {}, \"query\": ${{ steps.pr_data.outputs.query }}, \"response_mode\": \"blocking\", \"conversation_id\": \"pr_${{ github.event.pull_request.number }}\", \"user\": \"github\"}"
          
          echo "Request data: $REQUEST_DATA"
          
          RESPONSE=$(curl -s -w "\\n%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "$REQUEST_DATA" \
            "https://verf.io/v1/chat-messages")
          
          HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | sed '$d')
          
          echo "HTTP Status: $HTTP_STATUS"
          echo "Response body: $RESPONSE_BODY"
          
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "status=success" >> "$GITHUB_OUTPUT"
            echo "$RESPONSE_BODY" > response.json
          else
            echo "status=error" >> "$GITHUB_OUTPUT"
            echo "error_message=API request failed with status $HTTP_STATUS" >> "$GITHUB_OUTPUT"
          fi

      - name: Post Review Comment
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            try {
              let commentBody;
              
              if ('${{ steps.dify_request.outputs.status }}' === 'success') {
                const responseData = fs.readFileSync('response.json', 'utf8');
                const response = JSON.parse(responseData);
                commentBody = response.answer || response.text || 'No review content provided';
              } else {
                commentBody = '⚠️ Error: Failed to generate review.\nError: ${{ steps.dify_request.outputs.error_message }}';
              }
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.name,
                body: commentBody
              });
            } catch (error) {
              console.error('Error:', error);
              throw error;
            }
